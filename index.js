// index.js

const { Client, IntentsBitField, ActivityType } = require('discord.js');
const fs = require('fs');
const path = require('path');
const express = require('express'); // üåê ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Express ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Web Server
require('dotenv').config();

// ----------------------------------------------------------------
// 1. Web Server Setup (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Render 24/7 Uptime)
// ----------------------------------------------------------------
const app = express();
// Render ‡∏à‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î PORT ‡∏ú‡πà‡∏≤‡∏ô Environment Variable (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ 3000)
const port = process.env.PORT || 3000;

// Endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Uptime Monitor (‡πÄ‡∏ä‡πà‡∏ô UptimeRobot)
app.get('/', (req, res) => {
    // ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ OK ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Render ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
    res.send('Discord Bot is Alive and Well! üü¢'); 
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏° Web Server
app.listen(port, () => {
    console.log(`üåê Web Server running on port ${port}`);
});

// ----------------------------------------------------------------
// 2. Scheduler ‡πÅ‡∏•‡∏∞ Client Setup
// ----------------------------------------------------------------
const { startScheduler } = require('./src/scheduler/scheduler'); 

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Client ‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏° Intents ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
const client = new Client({
    intents: [
        // Intents ‡∏´‡∏•‡∏±‡∏Å (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Command, Guilds)
        IntentsBitField.Flags.Guilds,
        IntentsBitField.Flags.GuildMembers,      
        IntentsBitField.Flags.GuildMessages,
        IntentsBitField.Flags.MessageContent,
        
        // ‚≠êÔ∏è Intents ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Voice State Update
        IntentsBitField.Flags.GuildVoiceStates,
    ],
});


// ----------------------------------------------------------------
// 3. Event Handler: ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Event ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å src/events/
// ----------------------------------------------------------------
const eventsPath = path.join(__dirname, 'src/events');
const eventFiles = fs.readdirSync(eventsPath).filter(file => file.endsWith('.js'));

for (const file of eventFiles) {
    const filePath = path.join(eventsPath, file);
    const event = require(filePath);

    // ‡πÉ‡∏ä‡πâ Event name ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô: 'ready'
    const eventName = event.name; 

    if (event.once) {
        // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ event 'ready' ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏° Discord.js
        client.once(eventName, (...args) => event.execute(...args, client));
    } else {
        client.on(eventName, (...args) => event.execute(...args, client));
    }
}
// ----------------------------------------------------------------

// ----------------------------------------------------------------
// 4. Event: Bot Ready (ready) - ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Scheduler
// * ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ Event 'ready' ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏° Discord.js
// * ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå src/events ‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏∑‡πà‡∏≠ ready.js ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏õ‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô
// * ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ ready.js ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
// ----------------------------------------------------------------
client.once('ready', c => { // ‡πÉ‡∏ä‡πâ 'ready' ‡πÅ‡∏ó‡∏ô 'clientReady' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ
    console.log(`‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠ ${c.user.tag}`);

    // ‚≠êÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Activity
    c.user.setActivity('‡πÅ‡∏°‡πà‡∏°‡∏∂‡∏á‡∏≠‡∏¢‡∏π‡πà', { 
        type: 0 // ‡πÉ‡∏ä‡πâ ActivityType.Listening ‡πÅ‡∏ó‡∏ô‡πÄ‡∏•‡∏Ç 0
    });
    // ----------------------------------------------------
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Scheduler
    startScheduler(c); 
});
// ----------------------------------------------------------------


// ----------------------------------------------------------------
// 5. Event Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SIGINT (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢)
// ----------------------------------------------------------------
process.on('SIGINT', () => {
    console.log('ü§ñ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏¢‡∏∏‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô... ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
    client.destroy();
    process.exit(0);
});
// ----------------------------------------------------------------


// 6. ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó Login
client.login(process.env.DISCORD_TOKEN);